version: '2.2'
volumes:
  dependency-track:
  sonar-conf:
  sonar-data:
  sonar-extensions:
  vault-data:

networks:
  internal:
    driver: bridge

services:
  jervis:
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    # run with indefinite sleep for vscode connection persistence
    command: /bin/bash -c 'while sleep 1000;do true;done'
    volumes:
      - ..:/workspace/jervis
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /run/user/${UID:-1000}/pulse/native:/run/user/${UID:-1000}/pulse/native
      - /run/user/${UID:-1000}/bus:/run/user/${UID:-1000}/bus
    devices:
      - /dev/dri
      - /dev/snd
    environment:
      DISPLAY: $DISPLAY
      PULSE_SERVER: unix:/run/user/${UID:-1000}/pulse/native
      DBUS_SESSION_BUS_ADDRESS: unix:path=/run/user/${UID:-1000}/bus
    networks:
      - internal
    depends_on:
      - sonarqube
      - vault
  sonarqube:
    init: true
    # https://hub.docker.com/_/sonarqube/
    image: sonarqube:7.9.1-community
    environment:
      sonar.forceAuthentication: 'false'
      sonar.web.host: '0.0.0.0'
    volumes:
      - sonar-conf:/opt/sonarqube/conf
      - sonar-extensions:/opt/sonarqube/extensions
      - sonar-data:/opt/sonarqube/data
    networks:
      - internal
  vault:
    image: vault
    init: true
    command:
      - "sh"
      - "-c"
      - |
        set -ex
        export IP=$$(ip -o ro get $$(ip ro | awk '$$1 == "default" { print $$3 }') | awk '{print $$5}')
        export VAULT_API_ADDR="http://$${IP}:8200" VAULT_CLUSTER_ADDR="https://$${IP}:8201"
        exec vault server -config=/vault/config
    volumes:
      - vault-data:/vault
    environment:
      VAULT_ADDR: 'http://vault:8200'
      VAULT_LOCAL_CONFIG: >-
        {
            "ui": true,
            "backend": {
                "file": {
                    "path": "/vault/file"
                }
            },
            "default_lease_ttl": "168h",
            "listener": {
                "tcp": {
                    "address": "0.0.0.0:8200",
                    "tls_disable": "1"
                }
            },
            "max_lease_ttl": "720h"
        }
    cap_add:
      - IPC_LOCK
    networks:
      - internal
  dtrack-apiserver:
    # https://dependencytrack.org/
    image: dependencytrack/apiserver
    # https://docs.dependencytrack.org/getting-started/configuration/
    environment:
      ALPINE_ENFORCE_AUTHENTICATION: 'false'
      ALPINE_ENFORCE_AUTHORIZATION: 'false'

    volumes:
      - 'dependency-track:/data'
      # Depends on https://github.com/DependencyTrack/frontend/pull/334
      #- './dependencytrack-application.properties:/data/.dependency-track/application.properties:ro'
    restart: unless-stopped
    networks:
      - internal
  dependencytrack:
    image: dependencytrack/frontend
    depends_on:
      - dtrack-apiserver
    environment:
      API_BASE_URL: 'http://dtrack-apiserver:8080'
      # Depends on https://github.com/DependencyTrack/frontend/pull/334
      #API_NO_LOGIN: 'true'
    restart: unless-stopped
    networks:
      - internal
